import inspect
import discord
import random
import json
import os
import time
from discord.ext import commands
from bot import client, chess_bot

def get_current_game(func):
    async def function_wrapper(*args, **kwargs):
        ctx = args[0]
        user2 = kwargs.get('user2')
        try:
            game = chess_bot.find_current_game(ctx.author, user2)
            kwargs['game'] = game
        except Exception as e:
            await ctx.send(str(e))
            return
            
        await func(*args, **kwargs)
    function_wrapper.__name__ = func.__name__
    function_wrapper.__signature__ = inspect.signature(func)
    return function_wrapper

@client.check
async def globally_block_dms(ctx):
    return ctx.guild is not None

@client.event
async def on_ready():
    await client.change_presence(status=discord.Status.online, activity=discord.Game(f'Planejando uma ordem surpresa'))
    print('√â bom te ver, mestre Jedi.')

@client.event
async def on_command_error(ctx, error):
    if isinstance(error, commands.BadArgument) and 'User' in str(error) and 'not found' in str(error):
        await ctx.send('Mestre quem?')
    if isinstance(error, commands.CommandNotFound):
        await ctx.send('Esta ordem n√£o existe, agora se me der licen√ßa...')
    print(f'{error.__class__}: {error}')

@client.remove_command('help')

@client.command(aliases=['ajuda'])
async def help(ctx, page='1'):
    try:
        page_number = int(page)
    except:
        page_number = 1

    ajuda = discord.Embed(title='Ajuda', description=f'Comandos ({page_number}/2):', colour=discord.Color.blurple(), timestamp=ctx.message.created_at)
    ajuda.set_thumbnail(url='https://cdn.discordapp.com/attachments/676574583083499532/752314249610657932/1280px-Flag_of_the_Galactic_Republic.png')
    if page_number == 1:
        ajuda.add_field(name='cp!ping', value='Confere se o bot est√° online e sua velocidade de resposta')
        ajuda.add_field(name='cp!clear', value='Limpa o chat, com o padr√£o sendo 5 mensagens. \n aka:limpar, clean')
        ajuda.add_field(name='cp!vision', value='Fa√ßa uma pergunta ao Chanceler e ele ir√° lhe responder. \n aka:8ball')
        ajuda.add_field(name='cp!sorte', value='Cara ou coroa. \n aka:caracoroa')
        ajuda.add_field(name='cp!level', value='Mostra o n√≠vel de usu√°rio ao u√∫ario que pediu \n aka:nivel')
        ajuda.add_field(name='cp!rank', value='Mostra a tabela de niveis de usu√°rios em ordem de maior pra menor \n aka:board')
        ajuda.add_field(name='cp!rps', value='Pedra, papel e tesoura com dinossauros \n aka pedrapapeltesoura, ppt, dino')
    else:
        ajuda.add_field(name='cp!busca', value='Faz uma busca pelo buscador definido (padr√£o: Google) \n aka google, search, buscar')
        ajuda.add_field(name='cp!xadrez_novo', value='Inicie uma nova partida de xadrez com algu√©m.\n Passe o ID de usu√°rio para come√ßar uma partida.\n aka:xn')
        ajuda.add_field(name='cp!xadrez_jogar', value='Fa√ßa uma jogada em sua partida atual. \n aka:xj')
        ajuda.add_field(name='cp!xadrez_abandonar', value='Abandone a partida atual.\n aka:xa')
        ajuda.add_field(name='cp!xadrez_pgn', value='Gera o PGN da partida atual.\n aka:xpgn')
        ajuda.add_field(name='cp!xadrez_todos', value='Veja todas as partidas que est√£o sendo jogadas agora.\n aka:xt')
        ajuda.add_field(name='cp!plagueis', value='Conta a treg√©dia de Darth Plagueis.')
    await ctx.send(embed=ajuda)

@client.command()
async def ping(ctx):
    ping = discord.Embed(title='Pong...', description=f'{round(client.latency * 1000)}ms', colour=discord.Color.blurple(), timestamp=ctx.message.created_at)
    await ctx.send(embed=ping)

@client.command(aliases=['limpar', 'clean'])
@commands.has_permissions(manage_messages=True)
async def clear(ctx, amount=5+1):
    await ctx.channel.purge(limit=amount)

@client.command(aliases=['8ball'])
async def vision(ctx, *, question):
    responses = ['Assim √©.', 'Est√° me amea√ßando?', '√â certo.', 'Acho que devemos buscar mais informa√ß√µes.', 'Isso n√£o est√° correto.', 'Voc√™ est√° errado(a).', 'N√£o, n√£o, N√ÉO!!', 'Acredito que esteja errado(a), Mestre', 'Isso necessita de mais an√°lises']
    await ctx.send(f'{random.choice(responses)}')

@vision.error
async def clear_error(ctx, error):
    if isinstance(error, commands.MissingRequiredArgument):
        await ctx.send('Queria me perguntar algo, Jedi?')

@client.command(aliases=['caracoroa'])
async def sorte(ctx):
    previsao = ['Cara', 'Coroa']
    await ctx.send(f'{random.choice(previsao)}')

@client.command(aliases=['pedrapapeltesoura', 'ppt', 'dino'])
async def rps(ctx, player_choice_str=''):
    player_choice_str = player_choice_str.title()
    available_options = ['Deus', 'Homem', 'Dinossauro']
    if player_choice_str not in available_options:
        await ctx.send("Op√ß√£o inv√°lida")
        return

    player_choice = available_options.index(player_choice_str)
    bot_choice = random.randint(0,2)
    bot_choice_str = available_options[bot_choice]

    if bot_choice == player_choice:
        #empate
        result = "Mulher herda a Terra"
    else:
        winner_choice = max(bot_choice, player_choice) if abs(bot_choice - player_choice) == 1 else min(bot_choice, player_choice)
        action_txt = ' destr√≥i '
        if winner_choice == player_choice:
            who = 'Voc√™ ganhou o jogo'
            winner, loser = player_choice_str, bot_choice_str
        else:
            who = 'Voc√™ perdeu o jogo'
            winner, loser = bot_choice_str, player_choice_str
        if winner == 'dinossauro':
            action_txt = ' come o '
        result = f'{winner}{action_txt}{loser}\n{who}'

    resp_message = f"O bot escolheu: {bot_choice_str}\n{result}"
    #result+='\n\nTodo s√°bado sess√£o de Jurassic Park na SWW'
    await ctx.send(resp_message)

@client.command(aliases=['xn'])
async def xadrez_novo(ctx, user2: discord.User, color_schema=None):
    result = chess_bot.new_game(ctx.author, user2, color_schema=color_schema)
    await ctx.send(result)

@client.command(aliases=['xj'])
@get_current_game
async def xadrez_jogar(ctx, move, *, user2: discord.User=None, **kwargs):
    game = kwargs['game']
    result, board_png_bytes = chess_bot.make_move(game, move)
    await ctx.send(result)
    if board_png_bytes:
        await ctx.send(file=discord.File(board_png_bytes, 'board.png'))
        chess_bot.save_games()

        was_last_move_blunder = await chess_bot.is_last_move_blunder(game)
        if was_last_move_blunder:
            await ctx.send("üëÄ")

@client.command(aliases=['xa'])
@get_current_game
async def xadrez_abandonar(ctx, *, user2: discord.User=None, **kwargs):
    game = kwargs['game']
    result, board_png_bytes = chess_bot.resign(game)
    await ctx.send(result)
    if board_png_bytes:
        await ctx.send(file=discord.File(board_png_bytes, 'board.png'))
        chess_bot.save_games()

@client.command(aliases=['xpgn'])
@get_current_game
async def xadrez_pgn(ctx, *, user2: discord.User=None, **kwargs):
    game = kwargs['game']
    result = chess_bot.generate_pgn(ctx.author, user2)
    await ctx.send(result)

@client.command(aliases=['xt', 'xadrez_jogos'])
async def xadrez_todos(ctx, page=0):
    png_bytes = chess_bot.get_all_boards_png(page)
    await ctx.send(file=discord.File(png_bytes, 'boards.png'))

@client.command()
async def plagueis(ctx):
    plagueis = discord.Embed(title='J√° ouviu a trag√©dia de Darth Plagueis, o s√°bio?...', description='Eu achei que n√£o. \nN√£o √© uma hist√≥ria que um Jedi lhe contaria.\n√â uma lenda Sith. \nDarth Plagueis era um Lorde Sombrio de Sith, t√£o poderoso e t√£o s√°bio que conseguia utilizar a For√ßa para influenciar os midiclorians para criar vida. \nEle tinha tantos conhecimento do lado sombrio que podia at√© impedir que aqueles que lhe eram pr√≥ximos morressem. \nAcontece que o lado sombrio √© o caminho para muitas habilidades que muitos consideram serem... n√£o naturais. \nEle se tornou t√£o poderoso; que a √∫nica coisa que ele tinha medo era, perder seu poder, o que acabou, √© claro, ele perdeu. \nInfelizmente, ele ensinou a seu aprendiz tudo o que sabia; ent√£o, seu o seu aprendiz o matou enquanto dormia. \n√â ir√¥nico. \nEle poderia salvar outros da morte, mas n√£o podia a salvar a si mesmo.', colour=discord.Color.blurple(), timestamp=ctx.message.created_at)
    await ctx.send(embed=plagueis)

@client.command(aliases=['google', 'buscar', 'search'])
async def busca(ctx, *args):
    if not args:
        await ctx.send("O que voc√™ quer buscar?")
        return
        
    dicio_servi√ßos = {
        'sww':'https://starwars.fandom.com/pt/wiki/',
        'starwarswiki':'https://starwars.fandom.com/pt/wiki/',
        'wookie':'https://starwars.fandom.com/wiki/',
        'google':'https://www.google.com/search?q=',
        'aw':'https://avatar.fandom.com/pt-br/wiki/',
        'avatar':'https://avatar.fandom.com/pt-br/wiki/',
    }
    
    if args[0].lower() in dicio_servi√ßos:
        buscador = dicio_servi√ßos[args[0].lower()]
        entrada = " ".join(args[1:])
    else:
        buscador = dicio_servi√ßos["google"]
        entrada = " ".join(args)
    await ctx.send(f'{buscador}{entrada.replace(" ", "_")}')
